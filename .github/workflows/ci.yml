name: M1 - Build Release APK

# Run the workflow when commits are pushed to M1 branch
on:
  push:
    branches:
      - M1

jobs:
  build-release-apk:
    name: Build Release APK
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout
        uses: actions/checkout@v3

      # Setup JDK
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      # Cache Gradle dependencies
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      # Load google-services.json and release keystore from the secrets
      - name: Decode secrets
        env:
          GOOGLE_SERVICES: ${{ secrets.GOOGLE_SERVICES }}
          LOCAL_PROPERTIES: ${{ secrets.LOCAL_PROPERTIES }}
          RELEASE_KEYSTORE: ${{ secrets.RELEASE_KEYSTORE }}
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          if [ -n "$GOOGLE_SERVICES" ]; then
            echo "$GOOGLE_SERVICES" | base64 --decode > ./app/google-services.json
          else
            echo "::warning::GOOGLE_SERVICES secret is not set. google-services.json will not be created."
          fi
          if [ -n "$LOCAL_PROPERTIES" ]; then
            echo "$LOCAL_PROPERTIES" | base64 --decode > ./local.properties
          else
            echo "::warning::LOCAL_PROPERTIES secret is not set. local.properties will not be created."
          fi
          if [ -n "$RELEASE_KEYSTORE" ]; then
            echo "$RELEASE_KEYSTORE" | base64 --decode > ./release.keystore
            echo "Release keystore decoded successfully"
          else
            echo "::warning::RELEASE_KEYSTORE secret is not set. Release signing will not be available."
          fi

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # Build the release APK
      - name: Build Release APK
        env:
          RELEASE_KEYSTORE_PATH: ./release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: ./gradlew assembleRelease --parallel --build-cache

      # Upload the release APK as an artifact for M1 submission
      - name: Upload M1 Release APK
        uses: actions/upload-artifact@v4
        with:
          name: joinMe-M1-release
          path: app/build/outputs/apk/release/app-release.apk
